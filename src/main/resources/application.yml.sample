spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: url
    username: username
    password: password

  security:
    oauth2:
      client:
        registration:
          google:
            client-id:
            client-secret:
            scope:
              - email
              - profile

          naver:
            client-id:
            client-secret:
            scope:
              - name
              - email
              - profile_image
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:8080/login/oauth2/code/naver"

          kakao:
            client-id:
            client-secret:
            scope:
              - profile_nickname
              - account_email
              - profile_image
            client-authentication-method: POST
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:8080/login/oauth2/code/kakao"
            client-name: kakao

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
            revoke-uri: "https://nid.naver.com/oauth2.0/token"
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
            unlink-uri: "https://kapi.kakao.com/v1/user/unlink"
          apple:
            client-id:
            key-uri: "https://appleid.apple.com/auth/keys"
            team-id:
            key-id:
            private-key:
            token-uri: "https://appleid.apple.com/auth/token"
            revoke-uri: "https://appleid.apple.com/auth/revoke"
          google:
            revoke-uri: "https://oauth2.googleapis.com/revoke"

  jpa:
    show-sql: true
    database-platform: com.jjbacsa.jjbacsabackend.etc.config.CustomDialect
    properties:
      hibernate.format_sql: true
      default_batch_fetch_size: 100
  servlet:
      multipart:
        location: "D:\\"

  redis:
    host: 127.0.0.1
    port: 6379


flyway:
  enabled: true
  baseline-on-migrate: true
  url: url
  user: user
  password: password

server:
  port: 8080

image:
  review:
    path:

jwt:
  key: Secret Key Random String
  access: access
  refresh: refresh

external:
  api:
    key: asdfasddf

cloud:
  aws:
    credentials:
      access-key:
      secret-key:
    region:
      static: ap-northeast-2
    s3:
      review:
      profile:
      inquiry:
      post:
    cloudfront:
      review-url-format:
      profile-url-format:
      inquiry-url-format:
      post-url-format:
    stack:
      auto: false
    ses:
      access-key:
      secret-key:
      domain: jjbaksa.com


spring:
  config:
    activate:
      on-profile: test
  h2:
    console:
      enabled: true
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:testdb;MODE=MySQL
    username: sa
    password:
  flyway:
    enabled: false

slack:
  url: https://hooks.slack.com/services/~~~~

context-path: "http://localhost:8080"

#메인 페이지
home-url: "stage.jjbaksa.com"

auth-url:
  # DynamicLink Prefix
  root-url:
  # Web URL 설정 (안드로이드, 애플이 아닌 플랫폼)
  link:
  # DynamicLink에 들어갈 속성 정보
  query:
    apn: